/**
 * tabletojson
 * jQuery plugin that reads an HTML table and returns a javascript object representing the values and columns of the table
 *
 * @author Daniel White
 * @copyright Daniel White 2013
 * @license MIT <https://github.com/lightswitch05/table-to-json/blob/master/MIT-LICENSE>
 * @link https://github.com/lightswitch05/table-to-json
 * @module tabletojson
 * @version 0.5.1
 */
(function(e){e.fn.tableToJSON=function(t){var n={ignoreColumns:[],onlyColumns:null,ignoreHiddenRows:true,tabelHeader:[]};t=e.extend(n,t);var r=function(e){if(e!==undefined&&e!==null){return true}return false};var i=function(n){if(r(t.onlyColumns)){return e.inArray(n,t.onlyColumns)===-1}return e.inArray(n,t.ignoreColumns)!==-1};var s=function(t,n){var r={};e.each(n,function(e,n){if(e<t.length){r[t[e]]=n}});return r};var o=function(t){var n=[];e(t).children("td,th").each(function(t,s){if(!i(t)){var o=e(s).data("override");var u=e.trim(e(s).text());n[n.length]=r(o)?o:u}});return n};var u=function(e){var n=e.find("tr:first").first();return t.tabelHeader.length===0?o(n):t.tabelHeader};var a=function(n,r){var i=[];n.children("tbody,*").children("tr").each(function(n,u){if(n!==0||t.tabelHeader.length!==0){if(e(u).is(":visible")||!t.ignoreHiddenRows){i[i.length]=s(r,o(u))}}});return i};var f=u(this);return a(this,f)}})(jQuery)